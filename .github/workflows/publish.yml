name: Publish
on:
  push:
    branches:
      - main
      - develop
env:
  CI: true
  PNPM_CACHE_FOLDER: .pnpm-store
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
jobs:
  version:
    permissions:
      contents: write #  to create release (changesets/action)
      issues: write # to post issue comments (changesets/action)
      pull-requests: write #  to create pull request (changesets/action)
      id-token: write # give id token write for provenance

    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - name: checkout code repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Import GPG key
        id: import-gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          git_user_signingkey: true
          git_commit_gpgsign: true


      - run: git config --global commit.gpgsign true
      - run: git config --global user.email "${{ steps.import-gpg.outputs.email }}"
      - run: git config --global user.name "github-actions[bot]"

      - name: setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup npmrc
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc


      # This enables task distribution via Nx Cloud
      # Run this command as early as possible, before dependencies are installed
      # Learn more at https://nx.dev/ci/reference/nx-cloud-cli#npx-nxcloud-startcirun
      - run: pnpm dlx nx-cloud start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="test"

      - name: install dependencies
        run: pnpm install --frozen-lockfile

      - uses: nrwl/nx-set-shas@v4
        with:
          main-branch-name: ${{ github.ref_name }}

      - name: setup pnpm config
        run: pnpm config set store-dir $PNPM_CACHE_FOLDER

      - run: pnpm exec nx affected -t build lint test 
      - name: publish
        uses: changesets/action@v1
        id: changesets
        with:
          publish: pnpm release
          title: Release PR
          branch: main
          setupGitUser: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_CONFIG_PROVENANCE: true

      - name: rebase develop with main on publish
        if: ${{ steps.changesets.outputs.published == 'true' }}
        run: |
          git checkout main
          git fetch --all
          git pull origin main

          git checkout develop
          git restore .
          git rebase main
          git push -f
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: publish snapshots if we didn't publish latest
        if: ${{ steps.changesets.outputs.published == 'false' }}
        run: |
                pnpm changeset version --snapshot beta
                pnpm changeset publish --tag beta --no-git-tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_CONFIG_PROVENANCE: true
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

